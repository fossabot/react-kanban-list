{"version":3,"sources":["components/Layout/MainLayout/MainLayout.jsx","components/Layout/LayoutRouter/LayoutRouter.jsx","components/Layout/Header/Header.jsx","components/Layout/Navigation/Navigation.jsx","components/Card/Card.jsx","constants/Types.js","components/InputEditable/InputEditable.jsx","components/Card/Cards.jsx","components/Panel/Panel.actions.js","components/Panel/Panel.actions.type.js","components/Card/Card.actions.js","components/Card/Card.actions.type.js","components/Panel/Panel.jsx","components/Panel/Panels.jsx","containers/HomePage/HomePage.jsx","containers/App/App.jsx","serviceWorker.js","components/Panel/Panel.reducers.js","components/Card/Card.reducers.js","store/root.js","index.js","store/configureStore.js"],"names":["MainLayout","props","children","react_default","a","createElement","Layout_Header_Header","Layout_Navigation_Navigation","LayoutRoute","_ref","Component","component","Layout","layout","rest","Object","objectWithoutProperties","Route","assign","render","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navigation","reactstrap_es","color","light","expand","onClick","className","navbar","to","tag","RDLink","Card","_this$props","connectDragSource","connectDropTarget","proptypes","PropTypes","func","isRequired","DragSource","beginDrag","id","connect","monitor","dragSource","isDragging","DropTarget","hover","monitorId","getItem","moveCard","dropTarget","InputEditable","handleClickToEdit","clickToEdit","handleEdit","e","type","key","text","target","value","_this$props2","editComponent","trim","length","handleDelete","_this$props3","deleteComponent","renderEditable","defaultValue","onBlur","onKeyPress","renderText","readOnly","class","edit","Cards","mountCards","cards","editCard","deleteCard","map","item","components_Card_Card","components_InputEditable_InputEditable","console","log","isFetchEditPanel","payload","isFetchDeletePanel","isFetchMovelPanel","isFetchInsertPanel","panelId","cardId","isFetchRemoveFromPanel","createPanel","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","uuid","stop","_x","apply","arguments","editPanel","edited","deletePanel","movePanel","isFetchCreateCard","isFetchEditCard","isFetchDeleteCard","createCard","createNewCard","insertInPanel","Panel","handleCreateCard","panel","handleDeleteCard","handleDeletePanel","forEach","card","_this$props4","connectDragPreview","filteredCards","find","filter","Card_Cards","mapDispatchToProps","objectSpread","actions","actionsCard","panelHoverTarget","_props$panel","monitorProps","monitorType","getItemType","insertPanel","cardsReducer","dragPreview","Panels","panels","components_Panel_Panel","HomePage","handleCreatePanel","Panel_Panels","DragDropContext","HTML5Backend","panelsReducer","App","Switch","LayoutRouter","exact","path","Redirect","from","Boolean","window","location","hostname","match","initialState","reducer","undefined","action","toConsumableArray","concat","_action$payload","indexOf","cardIdFilter","targetDropId","findIndex","rootReducer","combineReducers","router","routerReducer","Localforage","createInstance","name","driver","INDEXEDDB","description","version","then","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunk","promise","createStore","configureStore","store","ReactDOM","es","BrowserRouter","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0781fed5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Header, Navigation } from '../index';\n\nconst MainLayout = (props) => {\n  const { children } = props;\n\n  return (\n    <div>\n      <Header />\n      <Navigation />\n      <main>\n        { children }\n      </main>\n    </div>\n  )\n};\n\nMainLayout.propTypes = { children: PropTypes.object.isRequired };\n\nexport default MainLayout;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst LayoutRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","import React, { Component } from 'react';\nimport { Nav, Navbar, NavItem, NavLink, NavbarBrand, Collapse } from 'reactstrap';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <header>\n      </header>\n    )\n  }\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { NavLink as RDLink } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavLink, NavbarToggler } from 'reactstrap';\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarToggler onClick={this.toggle} />\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink to=\"/\" tag={RDLink}>Board</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Col } from 'reactstrap';\nimport { CARD } from '../../constants/Types';\n\nclass Card extends Component {\n  static proptypes = {\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n  }\n\n  render() {\n    const { connectDragSource, connectDropTarget } = this.props;\n    return connectDragSource(\n      connectDropTarget(\n        <div>\n          <Col>\n            {this.props.children}\n          </Col>\n        </div>\n      )\n    );\n  }\n}\n\nconst dragNDropSrc = {\n  beginDrag(props) {\n    return { id: props.id };\n  }\n};\n\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n});\n\nconst collectTarget = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget()\n});\n\nconst cardHoverTarget = {\n  hover(props, monitor) {\n    const { id } = props;\n    const monitorProps = monitor.getItem();\n    const monitorId = monitorProps.id;\n\n    if (id !== monitorId) {\n      props.moveCard(id, monitorId);\n    }\n  }\n};\n\nexport default DragSource(CARD, dragNDropSrc, collect)(\n  DropTarget(CARD, cardHoverTarget, collectTarget)(Card)\n)\n","export const PANEL = 'PANEL';\nexport const CARD = 'CARD';\n","import React, { Component } from 'react';\nimport { Input, /* Row, Col, */ Button } from 'reactstrap';\n\nclass InputEditable extends Component {\n  handleClickToEdit = () => {\n    const { id, clickToEdit } = this.props;\n    clickToEdit(id);\n  }\n\n  handleEdit = (e) => {\n    if (e.type === 'keypress' && e.key !== 'Enter') {\n      return;\n    }\n\n    const text = e.target.value;\n    const { id, editComponent } = this.props;\n    if (text.trim().length) {\n      editComponent(id, text);\n    }\n  }\n\n  handleDelete = () => {\n    const { id, deleteComponent } = this.props;\n    deleteComponent(id);\n  }\n\n  renderEditable = () => (\n    <div>\n      <Input\n        type=\"text\"\n        className=\"form-control\"\n        defaultValue={this.props.text}\n        onBlur={this.handleEdit}\n        onKeyPress={this.handleEdit}\n      />\n    </div>\n  );\n\n  renderText = () => (\n    <div className=\"row\">\n      <div className=\"col-10 no-padding\">\n        <Input\n          type=\"text\"\n          className=\"form-control\"\n          defaultValue={this.props.text}\n          onClick={this.handleClickToEdit}\n          readOnly\n        />\n      </div>\n      <div>\n        <Button\n          onClick={this.handleDelete}\n          color=\"danger\"\n          className=\"col-4\"\n        >\n          <i class=\"icon ion-md-trash\"></i>\n        </Button>\n      </div>\n    </div>\n  );\n\n  render() {\n    const { edit } = this.props;\n\n    if (edit) {\n      return this.renderEditable();\n    }\n\n    return (\n      <div>\n        {this.renderText()}\n      </div>)\n  }\n}\n\nexport default InputEditable;\n","import React, { Component } from 'react';\n\nimport Card from './Card';\nimport InputEditable from '../InputEditable/InputEditable';\n\nclass Cards extends Component {\n\n  mountCards = () => {\n    const { cards, moveCard, clickToEdit, editCard, deleteCard } = this.props;\n    return cards.map((item) => (\n      <Card\n        key={item.id}\n        id={item.id}\n        moveCard={moveCard}\n      >\n        <InputEditable\n          id={item.id}\n          edit={item.edit}\n          text={item.text}\n          clickToEdit={clickToEdit}\n          editComponent={editCard}\n          deleteComponent={deleteCard}\n        />\n      </Card>\n    ));\n  }\n\n  render() {\n    console.log('this: ', this.props)\n    return (\n      <ul>\n        {this.mountCards()}\n      </ul>\n    )\n  }\n};\n\nexport default Cards;\n","import uuid from 'uuid/v4';\n\nimport {\n  CREATE_PANEL,\n  EDIT_PANEL,\n  DELETE_PANEL,\n  MOVE_PANEL,\n  INSERT_IN_PANEL,\n  REMOVE_FROM_PANEL,\n} from './Panel.actions.type';\n\nconst isFetchCreatePanel = value => ({\n  type: CREATE_PANEL,\n  payload: {\n    id: uuid(),\n    text: value,\n    edit: false,\n    cards: []\n  }\n});\n\nexport const isFetchEditPanel = payload => ({ type: EDIT_PANEL, payload });\nexport const isFetchDeletePanel = id => ({ type: DELETE_PANEL, payload: { id } });\nexport const isFetchMovelPanel = (id, monitorId) => ({ type: MOVE_PANEL, payload: { id, monitorId }});\n\nexport const isFetchInsertPanel = (panelId, cardId) => ({ type: INSERT_IN_PANEL, payload: { panelId, cardId } });\nexport const isFetchRemoveFromPanel = (panelId, cardId) => ({ type: REMOVE_FROM_PANEL, payload: { panelId, cardId } });\n\nexport const createPanel = () => async (dispatch) => {\n  dispatch(isFetchCreatePanel('New Panel'));\n};\n\nexport const editPanel = (id, value) => dispatch => {\n  const edited = { id };\n\n  if (!value) {\n    edited.edit = true;\n  } else {\n    edited.edit = false;\n    edited.text = value;\n  }\n\n  dispatch(isFetchEditPanel(edited));\n};\n\nexport const deletePanel = (id) => dispatch => {\n  dispatch(isFetchDeletePanel(id));\n};\n\nexport const movePanel = (id, monitorId) => dispatch => {\n  dispatch(isFetchMovelPanel(id, monitorId));\n};\n","export const CREATE_PANEL = 'CREATE_PANEL';\nexport const EDIT_PANEL = 'EDIT_PANEL';\nexport const DELETE_PANEL = 'DELETE_PANEL';\nexport const MOVE_PANEL = 'MOVE_PANEL';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const INSERT_IN_PANEL = 'INSERT_IN_PANEL';\nexport const REMOVE_FROM_PANEL = 'REMOVE_FROM_PANEL';","import uuid from 'uuid/v4';\n\nimport {\n  CREATE_CARD,\n  EDIT_CARD,\n  DELETE_CARD,\n  // MOVE_CARD,\n} from './Card.actions.type';\n\nimport { isFetchInsertPanel } from '../Panel/Panel.actions';\n\nexport const isFetchCreateCard = payload => ({ type: CREATE_CARD, payload });\nexport const isFetchEditCard = payload => ({ type: EDIT_CARD, payload });\nexport const isFetchDeleteCard = id => ({ type: DELETE_CARD, payload: { id } });\n// export const isFetchMoveCard = () => ({ type: MOVE_CARD });\n\nexport const createCard = (panelId) => dispatch => {\n  const createNewCard = {\n    id: uuid(),\n    edit: false,\n    text: 'New Card'\n  };\n\n  dispatch(isFetchCreateCard(createNewCard));\n  const { id } = createNewCard;\n  dispatch(isFetchInsertPanel(panelId, id));\n};\n\nexport const editCard = (id, value) => dispatch => {\n  const edited = { id };\n\n  if (!value) {\n    edited.edit = true;\n  } else {\n    edited.edit = false;\n    edited.text = value;\n  }\n\n  dispatch(isFetchEditCard(edited));\n}\n\nexport const deleteCard = (panelId, cardId) => dispatch => {\n  dispatch(isFetchDeleteCard(cardId));\n\n  if (!panelId) return;\n\n  // dispatch(isFetchRemoveFromPanel(panelId, cardId));\n}\n\nexport const moveCard = () => dispatch => {\n  // dispatch(isFetchMoveCard);\n};\n\nexport const insertInPanel = (id, monitorId) => dispatch => {\n  dispatch(isFetchInsertPanel(id, monitorId));\n};\n","export const CREATE_CARD = 'CREATE_CARD'\nexport const EDIT_CARD = 'EDIT_CARD'\nexport const DELETE_CARD = 'DELETE_CARD'\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { Card, CardBody, CardHeader, CardFooter, Col, Button } from 'reactstrap';\n\nimport Cards from '../Card/Cards';\nimport InputEditable from '../InputEditable/InputEditable';\nimport { PANEL, CARD } from '../../constants/Types';\n\nimport * as actions from './Panel.actions';\nimport * as actionsCard from '../Card/Card.actions';\n\nclass Panel extends Component {\n  handleCreateCard = () => {\n    const { panel, createCard } = this.props;\n    createCard(panel.id);\n  };\n\n  handleDeleteCard = () => {\n    const { panel, deleteCard } = this.props;\n    deleteCard(panel.id);\n  }\n\n  handleDeletePanel = (panelId) => {\n    const { panel, deletePanel, deleteCard } = this.props;\n    const { cards } = panel;\n\n    deletePanel(panelId);\n    cards.forEach(card => deleteCard(panelId, card));\n  }\n\n  render() {\n    const { cards, panel, connectDragPreview, connectDropTarget, connectDragSource, editPanel } = this.props;\n    const filteredCards = panel.cards\n      .map(id => cards.find(card => card.id === id))\n      .filter(card => card);\n\n    return connectDragPreview(\n      connectDropTarget(\n        <div>\n          <Col>\n            {connectDragSource(\n              <div>\n                <Card>\n                  <CardHeader>\n                    <InputEditable\n                      id={panel.id}\n                      edit={panel.edit}\n                      text={panel.text}\n                      editComponent={editPanel}\n                      clickToEdit={editPanel}\n                      deleteComponent={this.handleDeletePanel}\n                    />\n                  </CardHeader>\n                  <CardBody>\n                    <Cards\n                      cards={filteredCards}\n                      clickToEdit={this.props.editCard}\n                      deleteCard={this.handleDeleteCard}\n                      moveCard={this.props.moveCard}\n                    />\n                  </CardBody>\n                  <CardFooter>\n                    <Button onClick={this.handleCreateCard}>\n                      <i className=\"icon ion-md-add-circle\" /> Card\n                  </Button>\n                  </CardFooter>\n                </Card>\n              </div>\n            )}\n          </Col>\n        </div>\n      )\n    )\n  }\n};\n\nconst mapStateToProps = state => ({ cards: state.cardsReducer });\n\nconst mapDispatchToProps = { ...actions, ...actionsCard };\n\nconst dragNDropSrc = {\n  beginDrag(props) {\n    return { id: props.panel.id };\n  }\n}\n\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n  connectDragPreview: connect.dragPreview(),\n});\n\nconst collectTarget = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget()\n})\n\nconst panelHoverTarget = {\n  hover(props, monitor) {\n    const { id, cards } = props.panel;\n    const monitorProps = monitor.getItem();\n    const monitorType = monitor.getItemType();\n    const monitorId = monitorProps.id;\n\n    if (id !== monitorId && CARD === monitorType) {\n      return props.movePanel(id, monitorId);\n    }\n\n    if (!cards.length && CARD === monitorType) {\n      return props.insertPanel(id, monitorId);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  DragSource(PANEL, dragNDropSrc, collect)(\n    DropTarget([CARD, PANEL], panelHoverTarget, collectTarget)(Panel)\n  )\n)\n","import React from 'react';\nimport Panel from './Panel'\nimport { Row, Container } from 'reactstrap';\n\nconst Panels = (props) => {\n  const { panels, editPanel, deletePanel, moveCard } = props;\n\n  return (\n    <Container>\n      <Row>\n        {\n          panels.map(panel => (\n            <Panel\n              key={panel.id}\n              panel={panel}\n              editPanel={editPanel}\n              deletePanel={deletePanel}\n              moveCard={moveCard}\n            />\n          ))\n        }\n      </Row>\n    </Container>\n  )\n}\n\nexport default Panels\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Button } from 'reactstrap';\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nimport Panels from '../../components/Panel/Panels';\nimport * as actions from '../../components/Panel/Panel.actions';\n\nclass HomePage extends Component {\n  handleCreatePanel = () => {\n    this.props.createPanel();\n  };\n\n  render() {\n    const { panels, editPanel, deletePanel, movePanel } = this.props;\n\n    return (\n      <div>\n        <div className=\"col-12 action-create\">\n          <Button\n            color=\"primary\"\n            onClick={this.handleCreatePanel}\n          >\n            <i className=\"\"></i> New Panel\n          </Button>\n        </div>\n        <Panels\n          panels={panels}\n          editPanel={editPanel}\n          deletePanel={deletePanel}\n          movePanel={movePanel}\n        />\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({ panels: state.panelsReducer });\n\nconst mapDispatchToProps = { ...actions };\n\nexport default DragDropContext(HTML5Backend)(\n  connect(mapStateToProps, mapDispatchToProps)(HomePage)\n);\n","import React, { Component } from 'react';\nimport { Switch, Redirect } from 'react-router';\n\nimport { LayoutRouter, MainLayout } from '../../components/Layout';\n\nimport HomePage from '../HomePage/HomePage';\n\nconst App = () => (\n  <Switch>\n    <LayoutRouter\n      exact\n      path=\"/\"\n      layout={MainLayout}\n      component={HomePage}\n    />\n    <Redirect from=\"*\" to=\"/\" />\n  </Switch>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CREATE_PANEL,\n  DELETE_PANEL,\n  EDIT_PANEL,\n  MOVE_PANEL,\n  INSERT_IN_PANEL,\n  REMOVE_FROM_PANEL,\n} from './Panel.actions.type';\n\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_PANEL:\n      return [\n        ...state,\n        action.payload\n      ];\n    case EDIT_PANEL:\n      return state.map(panel => {\n        const { id } = action.payload;\n        if (id === panel.id) return Object.assign({}, panel, action.payload);\n        return panel;\n      });\n    case DELETE_PANEL:\n      const { id } = action.payload;\n      return state.filter(panel => id !== panel.id);\n    case INSERT_IN_PANEL:\n      const { panelId, cardId } = action.payload;\n      return state.map((panel) => {\n        const { cards } = panel;\n        if (!panel.cards.indexOf(cardId)) {\n          return Object.assign({}, panel, {\n            cards: cards.filter((cardIdFilter) => {\n              return cardId !== cardIdFilter\n            })\n          });\n        }\n\n        if (panel.id === panelId) {\n          return Object.assign({}, panel, {\n            cards: cards.concat(cardId)\n          });\n        }\n\n        return panel;\n      });\n      case MOVE_PANEL:\n        const targetDropId = action.payload.id;\n        const monitorId = action.payload.monitorId;\n\n        const targetImdex = state.findIndex(panel => panel.id === targetDropId)\n        const monitorIndex = state.findIndex(panel => panel.id === monitorId);\n        \n        return state;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  CREATE_CARD,\n  EDIT_CARD,\n  DELETE_CARD,\n} from './Card.actions.type';\n\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_CARD:\n      return [\n        ...state,\n        action.payload\n      ];\n    case EDIT_CARD:\n      return state;\n    case DELETE_CARD:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport panelsReducer from '../components/Panel/Panel.reducers';\nimport cardsReducer from '../components/Card/Card.reducers';\n\nexport const rootReducer = combineReducers({\n  panelsReducer,\n  cardsReducer,\n  router: routerReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n// import { Router } from 'react-router';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Localforage from 'localforage'\n\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { configureStore } from './store/configureStore';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'ionicons/dist/css/ionicons.min.css';\nimport './style/style.scss';\n\nconst db = Localforage.createInstance({\n  name: 'kanban_react',\n  driver: Localforage.INDEXEDDB,\n  description: 'Used to store panels and cards',\n  version: 1.0\n})\n\ndb\n  .getItem('kanban')\n  .then(value => value || undefined)\n  .then(value => configureStore(value))\n  .then((store) => {\n    ReactDOM.render(\n      <Provider store={ store }>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    ,document.getElementById('root'));\n  });\n\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\nimport promise from 'redux-promise';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './root';\n\nexport const configureStore = (initialState) => {\n  const reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n  console.log('initialState: ', initialState);\n  return applyMiddleware(thunk, promise)(createStore)(rootReducer, initialState, reduxDevTools);\n  // return applyMiddleware(thunk, promise)(createStore)(rootReducer, reduxDevTools);\n  /*\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk, promise),\n  );\n  */\n};\n"],"sourceRoot":""}