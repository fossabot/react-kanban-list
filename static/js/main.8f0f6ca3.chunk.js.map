{"version":3,"sources":["components/Layout/MainLayout/MainLayout.jsx","components/Layout/LayoutRouter/LayoutRouter.jsx","components/Layout/Header/Header.jsx","components/Layout/Navigation/Navigation.jsx","components/Card/Card.jsx","constants/Types.js","components/InputEditable/InputEditable.jsx","components/Card/Cards.jsx","components/Panel/Panel.actions.js","components/Panel/Panel.actions.type.js","components/Card/Card.actions.js","components/Card/Card.actions.type.js","components/Panel/Panel.jsx","components/Panel/Panels.jsx","containers/HomePage/HomePage.jsx","containers/App/App.jsx","serviceWorker.js","components/Panel/Panel.reducers.js","components/Card/Card.reducers.js","store/root.js","index.js","store/configureStore.js"],"names":["MainLayout","props","children","react_default","a","createElement","Layout_Header_Header","Layout_Navigation_Navigation","LayoutRoute","_ref","Component","component","Layout","layout","rest","Object","objectWithoutProperties","Route","assign","render","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navigation","reactstrap_es","color","light","expand","onClick","className","navbar","to","tag","RDLink","Card","_this$props","connectDragSource","connectDropTarget","proptypes","PropTypes","func","isRequired","DragSource","beginDrag","id","connect","monitor","dragSource","isDragging","DropTarget","hover","monitorId","getItem","moveCard","dropTarget","InputEditable","handleClickToEdit","clickToEdit","handleEdit","e","type","key","text","target","value","_this$props2","editComponent","trim","length","handleDelete","_this$props3","deleteComponent","renderEditable","defaultValue","onBlur","onKeyPress","renderText","readOnly","class","edit","Cards","mountCards","cards","editCard","deleteCard","map","item","components_Card_Card","components_InputEditable_InputEditable","isFetchEditPanel","payload","isFetchDeletePanel","isFetchMovelPanel","isFetchInsertPanel","panelId","cardId","isFetchRemoveFromPanel","panelIdRemove","cardIdRemove","isFetchMoveCard","cardIdMove","monitorCardMoveId","createPanel","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","uuid","stop","_x","apply","arguments","editPanel","edited","deletePanel","movePanel","isFetchCreateCard","isFetchEditCard","isFetchDeleteCard","createCard","createNewCard","insertInPanel","Panel","handleCreateCard","panel","handleDeleteCard","handleDeletePanel","forEach","card","_this$props4","connectDragPreview","filteredCards","find","filter","Card_Cards","mapDispatchToProps","objectSpread","actions","actionsCard","panelHoverTarget","_props$panel","monitorProps","monitorType","getItemType","insertPanel","cardsReducer","dragPreview","Panels","panels","components_Panel_Panel","HomePage","handleCreatePanel","Panel_Panels","DragDropContext","HTML5Backend","panelsReducer","App","Switch","LayoutRouter","exact","path","Redirect","from","Boolean","window","location","hostname","match","initialState","reducer","undefined","action","toConsumableArray","concat","_action$payload","indexOf","cardIdFilter","targetDropId","findIndex","_action$payload2","targetPanel","monitorPanel","monitorCardIndex","console","log","_action$payload3","rootReducer","combineReducers","router","routerReducer","Localforage","createInstance","name","driver","INDEXEDDB","description","version","then","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunk","promise","createStore","configureStore","store","ReactDOM","es","BrowserRouter","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f0f6ca3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Header, Navigation } from '../index';\n\nconst MainLayout = (props) => {\n  const { children } = props;\n\n  return (\n    <div>\n      <Header />\n      <Navigation />\n      <main>\n        { children }\n      </main>\n    </div>\n  )\n};\n\nMainLayout.propTypes = { children: PropTypes.object.isRequired };\n\nexport default MainLayout;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst LayoutRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","import React, { Component } from 'react';\nimport { Nav, Navbar, NavItem, NavLink, NavbarBrand, Collapse } from 'reactstrap';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <header>\n      </header>\n    )\n  }\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { NavLink as RDLink } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavLink, NavbarToggler } from 'reactstrap';\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarToggler onClick={this.toggle} />\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink to=\"/\" tag={RDLink}>Board</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { Col } from 'reactstrap';\nimport { CARD } from '../../constants/Types';\n\nclass Card extends Component {\n  static proptypes = {\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n  }\n\n  render() {\n    const { connectDragSource, connectDropTarget } = this.props;\n    return connectDragSource(\n      connectDropTarget(\n        <div>\n          <Col>\n            {this.props.children}\n          </Col>\n        </div>\n      )\n    );\n  }\n}\n\nconst dragNDropSrc = {\n  beginDrag(props) {\n    return { id: props.id };\n  }\n};\n\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n});\n\nconst collectTarget = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget()\n});\n\nconst cardHoverTarget = {\n  hover(props, monitor) {\n    const { id } = props;\n    const monitorProps = monitor.getItem();\n    const monitorId = monitorProps.id;\n\n    if (id !== monitorId) {\n      props.moveCard(id, monitorId);\n    }\n  }\n};\n\nexport default DragSource(CARD, dragNDropSrc, collect)(\n  DropTarget(CARD, cardHoverTarget, collectTarget)(Card)\n)\n","export const PANEL = 'PANEL';\nexport const CARD = 'CARD';\n","import React, { Component } from 'react';\nimport { Input, /* Row, Col, */ Button } from 'reactstrap';\n\nclass InputEditable extends Component {\n  handleClickToEdit = () => {\n    const { id, clickToEdit } = this.props;\n    clickToEdit(id);\n  }\n\n  handleEdit = (e) => {\n    if (e.type === 'keypress' && e.key !== 'Enter') {\n      return;\n    }\n\n    const text = e.target.value;\n    const { id, editComponent } = this.props;\n    if (text.trim().length) {\n      editComponent(id, text);\n    }\n  }\n\n  handleDelete = () => {\n    const { id, deleteComponent } = this.props;\n    deleteComponent(id);\n  }\n\n  renderEditable = () => (\n    <div>\n      <Input\n        type=\"text\"\n        className=\"form-control\"\n        defaultValue={this.props.text}\n        onBlur={this.handleEdit}\n        onKeyPress={this.handleEdit}\n      />\n    </div>\n  );\n\n  renderText = () => (\n    <div className=\"row\">\n      <div className=\"col-10 no-padding\">\n        <Input\n          type=\"text\"\n          className=\"form-control\"\n          defaultValue={this.props.text}\n          onClick={this.handleClickToEdit}\n          readOnly\n        />\n      </div>\n        <Button\n          onClick={this.handleDelete}\n          color=\"danger\"\n          className=\"col-2\"\n        >\n          <i class=\"icon ion-md-trash\"></i>\n        </Button>\n    </div>\n  );\n\n  render() {\n    const { edit } = this.props;\n\n    if (edit) {\n      return this.renderEditable();\n    }\n\n    return (\n      <div>\n        {this.renderText()}\n      </div>)\n  }\n}\n\nexport default InputEditable;\n","import React, { Component } from 'react';\n\nimport Card from './Card';\nimport InputEditable from '../InputEditable/InputEditable';\n\nclass Cards extends Component {\n\n  mountCards = () => {\n    const { cards, moveCard, clickToEdit, editCard, deleteCard } = this.props;\n    return cards.map((item) => (\n      <Card\n        key={item.id}\n        id={item.id}\n        moveCard={moveCard}\n      >\n        <InputEditable\n          id={item.id}\n          edit={item.edit}\n          text={item.text}\n          clickToEdit={clickToEdit}\n          editComponent={editCard}\n          deleteComponent={deleteCard}\n        />\n      </Card>\n    ));\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.mountCards()}\n      </ul>\n    )\n  }\n};\n\nexport default Cards;\n","import uuid from 'uuid/v4';\n\nimport {\n  CREATE_PANEL,\n  EDIT_PANEL,\n  DELETE_PANEL,\n  MOVE_PANEL,\n  INSERT_IN_PANEL,\n  REMOVE_FROM_PANEL,\n  MOVE_CARD,\n} from './Panel.actions.type';\n\nconst isFetchCreatePanel = value => ({\n  type: CREATE_PANEL,\n  payload: {\n    id: uuid(),\n    text: value,\n    edit: false,\n    cards: []\n  }\n});\n\nexport const isFetchEditPanel = payload => ({ type: EDIT_PANEL, payload });\nexport const isFetchDeletePanel = id => ({ type: DELETE_PANEL, payload: { id } });\nexport const isFetchMovelPanel = (id, monitorId) => ({ type: MOVE_PANEL, payload: { id, monitorId }});\n\nexport const isFetchInsertPanel = (panelId, cardId) => ({ type: INSERT_IN_PANEL, payload: { panelId, cardId } });\nexport const isFetchRemoveFromPanel = (panelIdRemove, cardIdRemove) => ({ type: REMOVE_FROM_PANEL, payload: { panelIdRemove, cardIdRemove } });\nexport const isFetchMoveCard = (cardIdMove, monitorCardMoveId) => ({ type: MOVE_CARD, payload: { cardIdMove, monitorCardMoveId }});\n\nexport const createPanel = () => async (dispatch) => {\n  dispatch(isFetchCreatePanel('New Panel'));\n};\n\nexport const editPanel = (id, value) => dispatch => {\n  const edited = { id };\n\n  if (!value) {\n    edited.edit = true;\n  } else {\n    edited.edit = false;\n    edited.text = value;\n  }\n\n  dispatch(isFetchEditPanel(edited));\n};\n\nexport const deletePanel = (id) => dispatch => {\n  dispatch(isFetchDeletePanel(id));\n};\n\nexport const movePanel = (id, monitorId) => dispatch => {\n  dispatch(isFetchMovelPanel(id, monitorId));\n};\n","export const CREATE_PANEL = 'CREATE_PANEL';\nexport const EDIT_PANEL = 'EDIT_PANEL';\nexport const DELETE_PANEL = 'DELETE_PANEL';\nexport const MOVE_PANEL = 'MOVE_PANEL';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const INSERT_IN_PANEL = 'INSERT_IN_PANEL';\nexport const REMOVE_FROM_PANEL = 'REMOVE_FROM_PANEL';","import uuid from 'uuid/v4';\n\nimport {\n  CREATE_CARD,\n  EDIT_CARD,\n  DELETE_CARD,\n} from './Card.actions.type';\n\nimport { isFetchInsertPanel, isFetchRemoveFromPanel, isFetchMoveCard } from '../Panel/Panel.actions';\n\nexport const isFetchCreateCard = payload => ({ type: CREATE_CARD, payload });\nexport const isFetchEditCard = payload => ({ type: EDIT_CARD, payload });\nexport const isFetchDeleteCard = id => ({ type: DELETE_CARD, payload: { id } });\n\nexport const createCard = (panelId) => dispatch => {\n  const createNewCard = {\n    id: uuid(),\n    edit: false,\n    text: 'New Card'\n  };\n\n  dispatch(isFetchCreateCard(createNewCard));\n  const { id } = createNewCard;\n  dispatch(isFetchInsertPanel(panelId, id));\n};\n\nexport const editCard = (id, value) => dispatch => {\n  const edited = { id };\n\n  if (!value) {\n    edited.edit = true;\n  } else {\n    edited.edit = false;\n    edited.text = value;\n  }\n\n  dispatch(isFetchEditCard(edited));\n}\n\nexport const deleteCard = (panelId, cardId) => dispatch => {\n  dispatch(isFetchDeleteCard(cardId));\n\n  if (!panelId) return;\n\n  dispatch(isFetchRemoveFromPanel(panelId, cardId));\n}\n\nexport const moveCard = (id, monitorId) => dispatch => {\n  dispatch(isFetchMoveCard(id, monitorId));\n};\n\nexport const insertInPanel = (id, monitorId) => dispatch => {\n  dispatch(isFetchInsertPanel(id, monitorId));\n};\n","export const CREATE_CARD = 'CREATE_CARD'\nexport const EDIT_CARD = 'EDIT_CARD'\nexport const DELETE_CARD = 'DELETE_CARD'\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { Card, CardBody, CardHeader, CardFooter, Col, Button } from 'reactstrap';\n\nimport Cards from '../Card/Cards';\nimport InputEditable from '../InputEditable/InputEditable';\nimport { PANEL, CARD } from '../../constants/Types';\n\nimport * as actions from './Panel.actions';\nimport * as actionsCard from '../Card/Card.actions';\n\nclass Panel extends Component {\n  handleCreateCard = () => {\n    const { panel, createCard } = this.props;\n    createCard(panel.id);\n  };\n\n  handleDeleteCard = (cardId) => {\n    const { panel, deleteCard } = this.props;\n    deleteCard(panel.id, cardId);\n  }\n\n  handleDeletePanel = (panelId) => {\n    const { panel, deletePanel, deleteCard } = this.props;\n    const { cards } = panel;\n\n    deletePanel(panelId);\n    cards.forEach(card => deleteCard(panelId, card));\n  }\n\n  render() {\n    const { cards, panel, editCard, connectDragPreview, connectDropTarget, connectDragSource, editPanel } = this.props;\n    const filteredCards = panel.cards\n      .map(id => cards.find(card => card.id === id))\n      .filter(card => card);\n\n    return connectDragPreview(\n      connectDropTarget(\n        <div class=\"card__div\">\n          <Col>\n            {connectDragSource(\n              <div class=\"card__painel\">\n                <Card>\n                  <CardHeader>\n                    <InputEditable\n                      id={panel.id}\n                      edit={panel.edit}\n                      text={panel.text}\n                      editComponent={editPanel}\n                      clickToEdit={editPanel}\n                      deleteComponent={this.handleDeletePanel}\n                    />\n                  </CardHeader>\n                  <CardBody>\n                    <Cards\n                      cards={filteredCards}\n                      clickToEdit={editCard}\n                      editCard={editCard}\n                      deleteCard={this.handleDeleteCard}\n                      moveCard={this.props.moveCard}\n                    />\n                  </CardBody>\n                  <CardFooter>\n                    <Button onClick={this.handleCreateCard}>\n                      <i className=\"icon ion-md-add-circle\" /> Card\n                  </Button>\n                  </CardFooter>\n                </Card>\n              </div>\n            )}\n          </Col>\n        </div>\n      )\n    )\n  }\n};\n\nconst mapStateToProps = state => ({ cards: state.cardsReducer });\n\nconst mapDispatchToProps = { ...actions, ...actionsCard };\n\nconst dragNDropSrc = {\n  beginDrag(props) {\n    return { id: props.panel.id };\n  }\n}\n\nconst collect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging(),\n  connectDragPreview: connect.dragPreview(),\n});\n\nconst collectTarget = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget()\n})\n\nconst panelHoverTarget = {\n  hover(props, monitor) {\n    const { id, cards } = props.panel;\n    const monitorProps = monitor.getItem();\n    const monitorType = monitor.getItemType();\n    const monitorId = monitorProps.id;\n\n    if (id !== monitorId && CARD === monitorType) {\n      return props.movePanel(id, monitorId);\n    }\n\n    if (!cards.length && CARD === monitorType) {\n      return props.insertPanel(id, monitorId);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  DragSource(PANEL, dragNDropSrc, collect)(\n    DropTarget([CARD, PANEL], panelHoverTarget, collectTarget)(Panel)\n  )\n)\n","import React from 'react';\nimport Panel from './Panel'\nimport { Row, Container } from 'reactstrap';\n\nconst Panels = (props) => {\n  const { panels, editPanel, deletePanel, moveCard } = props;\n\n  return (\n    <Container>\n      <Row>\n        {\n          panels.map(panel => (\n            <Panel\n              key={panel.id}\n              panel={panel}\n              editPanel={editPanel}\n              deletePanel={deletePanel}\n              moveCard={moveCard}\n            />\n          ))\n        }\n      </Row>\n    </Container>\n  )\n}\n\nexport default Panels\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Button } from 'reactstrap';\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nimport Panels from '../../components/Panel/Panels';\nimport * as actions from '../../components/Panel/Panel.actions';\n\nclass HomePage extends Component {\n  handleCreatePanel = () => {\n    this.props.createPanel();\n  };\n\n  render() {\n    const { panels, editPanel, deletePanel, movePanel } = this.props;\n\n    return (\n      <div>\n        <div className=\"col-12 action-create\">\n          <Button\n            color=\"primary\"\n            onClick={this.handleCreatePanel}\n          >\n            <i className=\"\"></i> New Panel\n          </Button>\n        </div>\n        <Panels\n          panels={panels}\n          editPanel={editPanel}\n          deletePanel={deletePanel}\n          movePanel={movePanel}\n        />\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({ panels: state.panelsReducer });\n\nconst mapDispatchToProps = { ...actions };\n\nexport default DragDropContext(HTML5Backend)(\n  connect(mapStateToProps, mapDispatchToProps)(HomePage)\n);\n","import React, { Component } from 'react';\nimport { Switch, Redirect } from 'react-router';\n\nimport { LayoutRouter, MainLayout } from '../../components/Layout';\n\nimport HomePage from '../HomePage/HomePage';\n\nconst App = () => (\n  <Switch>\n    <LayoutRouter\n      exact\n      path=\"/\"\n      layout={MainLayout}\n      component={HomePage}\n    />\n    <Redirect from=\"*\" to=\"/\" />\n  </Switch>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CREATE_PANEL,\n  DELETE_PANEL,\n  EDIT_PANEL,\n  MOVE_PANEL,\n  INSERT_IN_PANEL,\n  REMOVE_FROM_PANEL,\n  MOVE_CARD,\n} from './Panel.actions.type';\n\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_PANEL:\n      return [\n        ...state,\n        action.payload\n      ];\n    case EDIT_PANEL:\n      return state.map(panel => {\n        const { id } = action.payload;\n        if (id === panel.id) return Object.assign({}, panel, action.payload);\n        return panel;\n      });\n    case DELETE_PANEL:\n      const { id } = action.payload;\n      return state.filter(panel => id !== panel.id);\n    case INSERT_IN_PANEL:\n      const { panelId, cardId } = action.payload;\n      return state.map((panel) => {\n        const { cards } = panel;\n        if (!panel.cards.indexOf(cardId)) {\n          return Object.assign({}, panel, {\n            cards: cards.filter((cardIdFilter) => {\n              return cardId !== cardIdFilter\n            })\n          });\n        }\n\n        if (panel.id === panelId) {\n          return Object.assign({}, panel, {\n            cards: cards.concat(cardId)\n          });\n        }\n\n        return panel;\n      });\n      case MOVE_PANEL:\n        const targetDropId = action.payload.id;\n        const monitorId = action.payload.monitorId;\n\n        const targetImdex = state.findIndex(panel => panel.id === targetDropId)\n        const monitorIndex = state.findIndex(panel => panel.id === monitorId);\n        \n        return state;\n      case MOVE_CARD:\n        const { cardIdMove, monitorCardMoveId } = action.payload;\n\n        let targetPanel = state.filter(panel => panel.cards.indexOf(cardIdMove));\n        let monitorPanel = state.filter(panel => panel.cards.indexOf(monitorCardMoveId));\n\n        targetPanel = targetPanel[0];\n        monitorPanel = monitorPanel[0];\n\n        const targetCardIndex = targetPanel.cards.indexOf(cardIdMove);\n        const monitorCardIndex = monitorPanel.cards.indexOf(monitorCardMoveId);\n\n        if (targetPanel.id === monitorCardIndex.id) {\n          // :X\n        }\n\n        return state.map((panel) => {\n          const panelId = panel.id;\n\n          console.log('painelId: ', panelId);\n\n          return panel;\n        });\n      case REMOVE_FROM_PANEL:\n        const { panelIdRemove, cardIdRemove } = action.payload;\n        return state.map((panel) => {\n          const { cards } = panel;\n\n          if (panelIdRemove !== panel.id) {\n            return panel;\n          }\n\n          return Object.assign({}, panel, {\n            cards: cards.filter(id => cardIdRemove !== id)\n          });\n        });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  CREATE_CARD,\n  EDIT_CARD,\n  DELETE_CARD,\n} from './Card.actions.type';\n\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_CARD:\n      return [\n        ...state,\n        action.payload\n      ];\n    case EDIT_CARD:\n      return state.map(card => {\n        const { id } = action.payload;\n        if (id === card.id) return Object.assign({}, card, action.payload);\n        return card;\n      });\n    case DELETE_CARD:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport panelsReducer from '../components/Panel/Panel.reducers';\nimport cardsReducer from '../components/Card/Card.reducers';\n\nexport const rootReducer = combineReducers({\n  panelsReducer,\n  cardsReducer,\n  router: routerReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n// import { Router } from 'react-router';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Localforage from 'localforage'\n\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { configureStore } from './store/configureStore';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'ionicons/dist/css/ionicons.min.css';\nimport './style/style.scss';\n\nconst db = Localforage.createInstance({\n  name: 'kanban_react',\n  driver: Localforage.INDEXEDDB,\n  description: 'Used to store panels and cards',\n  version: 1.0\n})\n\ndb\n  .getItem('kanban')\n  .then(value => value || undefined)\n  .then(value => configureStore(value))\n  .then((store) => {\n    ReactDOM.render(\n      <Provider store={ store }>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    ,document.getElementById('root'));\n  });\n\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\nimport promise from 'redux-promise';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './root';\n\nexport const configureStore = (initialState) => {\n  const reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n  console.log('initialState: ', initialState);\n  return applyMiddleware(thunk, promise)(createStore)(rootReducer, initialState, reduxDevTools);\n  // return applyMiddleware(thunk, promise)(createStore)(rootReducer, reduxDevTools);\n  /*\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk, promise),\n  );\n  */\n};\n"],"sourceRoot":""}